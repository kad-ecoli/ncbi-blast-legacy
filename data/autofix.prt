Macro-action-list ::= {
  edit-location {
    type cds ,
    action
      extend-3 NULL ,
    retranslate-cds FALSE ,
    constraint {
      location {
        strand any ,
        seq-type any ,
        partial5 either ,
        partial3 partial ,
        location-type any ,
        end3
          max-dist-from-end 2 } ,
      sequence {
        seqtype
          rna mRNA ,
        feature any ,
        strandedness any } } } ,
  edit-location {
    type cds ,
    action
      extend-5 NULL ,
    retranslate-cds FALSE ,
    constraint {
      location {
        strand any ,
        seq-type any ,
        partial5 partial ,
        partial3 either ,
        location-type any ,
        end5
          max-dist-from-end 2 } ,
      sequence {
        seqtype
          rna mRNA ,
        feature any ,
        strandedness any } } } ,
  edit-location {
    type cds ,
    action
      extend-3 NULL ,
    retranslate-cds FALSE ,
    constraint {
      location {
        strand any ,
        seq-type any ,
        partial5 either ,
        partial3 partial ,
        location-type any ,
        end3
          max-dist-from-end 2 } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  edit-location {
    type cds ,
    action
      extend-5 NULL ,
    retranslate-cds FALSE ,
    constraint {
      location {
        strand any ,
        seq-type any ,
        partial5 partial ,
        partial3 either ,
        location-type any ,
        end5
          max-dist-from-end 2 } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            location proviral ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "HIV" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      sequence {
        seqtype
          dna NULL ,
        feature any ,
        strandedness any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Retroviridae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual codon-start } ,
        value "match" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual translation } ,
        string-constraint {
          match-text "*" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  synchronize-cds-partials NULL ,
  adjust-for-consensus-splice NULL ,
  trim-stop-from-complete-cds NULL ,
  trim-junk-from-primer-seq NULL ,
  remove-seg-gaps NULL ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual nat-host ,
        value "Homo sapiens" ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "HIV" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual nat-host ,
        value "Homo sapiens" ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " " ,
          location beginning ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation TRUE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field title ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field authors ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field journal ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field issue ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field pages ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field serial-number ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field cit ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affiliation ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-div ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-city ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-sub ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-country ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-street ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-email ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-fax ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-phone ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-zipcode ,
          constraint
            is-all-caps NULL } } } } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation TRUE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affiliation ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-div ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-city ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-sub ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-country ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-street ,
          constraint
            is-all-caps NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-zipcode ,
          constraint
            is-all-caps NULL } } } } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation TRUE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field title ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field authors ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field journal ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field issue ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field pages ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field serial-number ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field cit ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affiliation ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-div ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-city ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-sub ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-country ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-street ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-email ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-fax ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-phone ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-zipcode ,
          constraint
            is-all-lower NULL } } } } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation TRUE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affiliation ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-div ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-city ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-sub ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-country ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-street ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-phone ,
          constraint
            is-all-lower NULL } } ,
      pub {
        type any ,
        special-field {
          field affil-zipcode ,
          constraint
            is-all-lower NULL } } } } ,
  fix-pub-caps {
    title TRUE ,
    authors FALSE ,
    affiliation FALSE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field title ,
          constraint
            is-all-caps NULL } } } } ,
  fix-pub-caps {
    title TRUE ,
    authors FALSE ,
    affiliation FALSE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field title ,
          constraint
            is-all-lower NULL } } } } ,
  fix-pub-caps {
    title FALSE ,
    authors TRUE ,
    affiliation FALSE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field authors ,
          constraint
            is-all-caps NULL } } } } ,
  fix-pub-caps {
    title FALSE ,
    authors TRUE ,
    affiliation FALSE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field authors ,
          constraint
            is-all-lower NULL } } } } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation FALSE ,
    affil-country TRUE ,
    punct-only FALSE } ,
  fix-pub-caps {
    title FALSE ,
    authors FALSE ,
    affiliation TRUE ,
    affil-country FALSE ,
    punct-only TRUE } ,
  aecr {
    action
      remove {
        field
          pub affil-sub } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affil-sub ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-sub } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affil-sub ,
          constraint {
            match-text "N/A" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space FALSE ,
            ignore-punct FALSE ,
            ignore-words {
              {
                word "N/A" ,
                synonyms {
                  "none" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE } } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-zipcode } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affil-zipcode ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-zipcode } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affil-zipcode ,
          constraint {
            match-text "N/A" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space FALSE ,
            ignore-punct FALSE ,
            ignore-words {
              {
                word "N/A" ,
                synonyms {
                  "none" ,
                  "N.A." } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE } } } } } ,
  aecr {
    action
      remove {
        field
          pub affiliation } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affiliation ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affiliation } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affiliation ,
          constraint {
            match-text "N/A" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space FALSE ,
            ignore-punct FALSE ,
            ignore-words {
              {
                word "N/A" ,
                synonyms {
                  "none" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE } } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-div } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affil-div ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-div } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affil-div ,
          constraint {
            match-text "N/A" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space FALSE ,
            ignore-punct FALSE ,
            ignore-words {
              {
                word "N/A" ,
                synonyms {
                  "none" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE } } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-street } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affil-street ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-street } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affil-street ,
          constraint {
            match-text "N/A" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space FALSE ,
            ignore-punct FALSE ,
            ignore-words {
              {
                word "N/A" ,
                synonyms {
                  "none" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE } } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-city } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field affil-city ,
          constraint
            is-all-punct NULL } } } } ,
  aecr {
    action
      remove {
        field
          pub affil-city } ,
    also-change-mrna FALSE ,
    constraint {
      pub {
        type any ,
        field {
          field affil-city ,
          constraint {
            match-text "N/A" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space FALSE ,
            ignore-punct FALSE ,
            ignore-words {
              {
                word "N/A" ,
                synonyms {
                  "none" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE } } } } } ,
  fix-pub-caps {
    title TRUE ,
    authors FALSE ,
    affiliation FALSE ,
    affil-country FALSE ,
    punct-only FALSE ,
    constraint {
      pub {
        type any ,
        special-field {
          field title ,
          constraint
            is-all-caps NULL } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " sp" ,
          repl-txt " sp.." ,
          location end ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " sp." ,
          repl-txt " sp.." ,
          location end ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " spp" ,
          repl-txt " spp.." ,
          location end ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " spp." ,
          repl-txt " spp.." ,
          location end ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  remove-descriptor {
    type publication ,
    constraint {
      pub {
        type unpublished ,
        special-field {
          field title ,
          constraint
            is-all-punct NULL } } } } ,
  remove-descriptor {
    type publication ,
    constraint {
      pub {
        type unpublished ,
        field {
          field title ,
          constraint {
            match-text "none" ,
            match-location equals ,
            case-sensitive FALSE ,
            ignore-space FALSE ,
            ignore-punct FALSE ,
            ignore-words {
              {
                word "none" ,
                synonyms {
                  "N/A" ,
                  "to be determined" ,
                  "not submitted" ,
                  "nothing" ,
                  "unpublished" ,
                  "direct submission" ,
                  "direct submit" ,
                  "submit" ,
                  "in preparation" ,
                  "manuscript in preparation" ,
                  "N.A." ,
                  "null" ,
                  "directed submission" ,
                  "unpublished data" ,
                  "No" } ,
                case-sensitive FALSE ,
                whole-word FALSE } } ,
            whole-word FALSE ,
            not-present FALSE ,
            is-all-caps FALSE ,
            is-all-lower FALSE ,
            is-all-punct FALSE ,
            ignore-weasel FALSE } } } } } ,
  remove-descriptor {
    type publication ,
    constraint {
      pub {
        type unpublished ,
        special-field {
          field title ,
          constraint
            is-not-present NULL } } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual nat-host ,
        value "Homo sapiens" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual nat-host ,
        constraint {
          match-text "human" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "human" ,
              synonyms {
                "humans" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            location mitochondrion ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type d-loop ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "control region" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "control region" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      string {
        match-text "mitochondrion" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            location mitochondrion ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "control region" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      string {
        match-text "mitochondrion" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            location mitochondrion ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          nucleotide NULL ,
        feature d-loop ,
        num-features
          equals 1 ,
        strandedness any } ,
      string {
        match-text "mitochondrion" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  fix-caps
    src-country NULL ,
  fix-caps
    src-qual sex ,
  fix-caps
    src-qual nat-host ,
  fix-caps
    src-qual isolation-source ,
  fix-caps
    src-qual dev-stage ,
  fix-caps
    src-qual tissue-type ,
  fix-caps
    src-qual lab-host ,
  fix-caps
    src-qual cell-type ,
  aecr {
    action
      convert {
        fields
          feature-field {
            type any ,
            field-from
              legal-qual standard-name ,
            field-to
              legal-qual note } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text append-semi } ,
    also-change-mrna FALSE } ,
  fix-format
    collection-date NULL ,
  aecr {
    action
      remove {
        field
          source-qual
            location nucleomorph } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Chlorarachniophyceae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Cryptophyta" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual orgmod-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual orgmod-note ,
        constraint {
          match-text "Organelle: nucleomorph" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Chlorarachniophyceae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Cryptophyta" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual orgmod-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual orgmod-note ,
        constraint {
          match-text "nucleomorph" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Chlorarachniophyceae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Cryptophyta" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual subsource-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual subsource-note ,
        constraint {
          match-text "Organelle: nucleomorph" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Chlorarachniophyceae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Cryptophyta" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual subsource-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual subsource-note ,
        constraint {
          match-text "nucleomorph" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Chlorarachniophyceae" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Cryptophyta" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location macronuclear } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Ciliophora" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual orgmod-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual orgmod-note ,
        constraint {
          match-text "Organelle: macronuclear" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Ciliophora" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual orgmod-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual orgmod-note ,
        constraint {
          match-text "macronuclear" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Ciliophora" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual subsource-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual subsource-note ,
        constraint {
          match-text "Organelle: macronuclear" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Ciliophora" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual subsource-note } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual subsource-note ,
        constraint {
          match-text "macronuclear" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Ciliophora" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  fix-spell NULL ,
  fix-format
    lat-lon NULL ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual all-quals } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct TRUE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual rpt-type } ,
        value "tandem" ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual satellite-type } ,
        string-constraint {
          match-text "microsatellite" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual rpt-type } ,
        string-constraint {
          match-text "tandem" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "[intronless gene]" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type cds ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "[intronless gene]" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type cds ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Viruses" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "[intronless gene]" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type cds ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Archaea" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "[intronless gene]" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          feature-field {
            type cds ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna mRNA ,
        feature any ,
        strandedness any } } } ,
  remove-duplicate-features {
    type any ,
    ignore-partials FALSE ,
    case-sensitive TRUE ,
    remove-proteins FALSE } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual germline } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual division ,
        type-constraint any } ,
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Craniata" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual metagenomic } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type n5UTR ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type n5UTR ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "UTR" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type n5UTR ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type n5UTR ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "5' UTR" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type n3UTR ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type n3UTR ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "UTR" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type n3UTR ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type n3UTR ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "3' UTR" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      parse {
        portion {
          left-marker
            free-text "ATCC" ,
          include-left TRUE ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          source-qual {
            field-from strain ,
            field-to culture-collection } ,
        remove-from-parsed FALSE ,
        remove-left FALSE ,
        remove-right FALSE ,
        transform {
          edit {
            find-txt "ATCC" ,
            repl-txt "ATCC:" ,
            location beginning ,
            case-insensitive FALSE } ,
          remove {
            include-left FALSE ,
            right-marker
              free-text ";" ,
            include-right TRUE ,
            inside FALSE ,
            case-sensitive TRUE ,
            whole-word FALSE } } ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual culture-collection-INST ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual strain ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      parse {
        portion {
          left-marker
            free-text "ATCC" ,
          include-left TRUE ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          source-qual {
            field-from cell-line ,
            field-to culture-collection } ,
        remove-from-parsed FALSE ,
        remove-left FALSE ,
        remove-right FALSE ,
        transform {
          edit {
            find-txt "ATCC" ,
            repl-txt "ATCC:" ,
            location beginning ,
            case-insensitive FALSE } ,
          remove {
            include-left FALSE ,
            right-marker
              free-text ";" ,
            include-right TRUE ,
            inside FALSE ,
            case-sensitive TRUE ,
            whole-word FALSE } } ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual culture-collection-INST ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual cell-line ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      parse {
        portion {
          left-marker
            free-text "ATCC" ,
          include-left TRUE ,
          include-right FALSE ,
          inside TRUE ,
          case-sensitive TRUE ,
          whole-word FALSE } ,
        fields
          source-qual {
            field-from tissue-type ,
            field-to culture-collection } ,
        remove-from-parsed FALSE ,
        remove-left FALSE ,
        remove-right FALSE ,
        transform {
          edit {
            find-txt "ATCC" ,
            repl-txt "ATCC:" ,
            location beginning ,
            case-insensitive FALSE } ,
          remove {
            include-left FALSE ,
            right-marker
              free-text ";" ,
            include-right TRUE ,
            inside FALSE ,
            case-sensitive TRUE ,
            whole-word FALSE } } ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual culture-collection-INST ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual tissue-type ,
        constraint {
          match-text "ATCC" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "ATCC:" ,
          repl-txt "ATCC " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "ATCC" ,
          repl-txt "ATCC " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual strain } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual strain ,
        constraint {
          match-text "ATCC " ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  fix-format
    primers NULL ,
  fix-usa-and-states NULL ,
  remove-lineage-notes NULL ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual nat-host ,
        value "Homo sapiens" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual nat-host ,
        constraint {
          match-text "homo sapiens" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "homo sapiens" ,
              synonyms {
                "homo sapien" ,
                "homo sapiens (human)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      string {
        match-text "Homo sapiens" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      convert {
        fields
          source-qual {
            field-from clone ,
            field-to isolate } ,
        strip-name TRUE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "DGGE" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      convert {
        fields
          source-qual {
            field-from clone ,
            field-to isolate } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "TGGE" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_gel_band_" ,
          repl-txt "GGE gel band " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_gel_band" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGEgelband" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGEband" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "gel" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE-band" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "gel" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE-gel band" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "gel" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_gel_" ,
          repl-txt "GGE gel band " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "band" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_gel" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "band" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_band_" ,
          repl-txt "GGE gel band " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "gel" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "GGE_band" ,
          repl-txt "GGE gel band" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "gel" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "dgge gel band" ,
          repl-txt "DGGE gel band" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "DGGE gel band" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "tgge gel band" ,
          repl-txt "TGGE gel band" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "TGGE gel band" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "DGGE band" ,
          repl-txt "DGGE gel band" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "TGGE band" ,
          repl-txt "TGGE gel band" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "DGGE" ,
          repl-txt "DGGE gel band" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "gel band" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "gel" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "band" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "TGGE" ,
          repl-txt "TGGE gel band" ,
          location beginning ,
          case-insensitive TRUE } ,
        field
          source-qual
            textqual isolate } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "gel band" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "gel" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "band" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  fix-caps
    mouse-strain NULL ,
  aecr {
    action
      edit {
        edit {
          find-txt "#" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          pub title } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt " sp" ,
          repl-txt " sp." ,
          location end ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " spp" ,
          repl-txt " sp." ,
          location end ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " spp." ,
          repl-txt " sp." ,
          location end ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " sp " ,
          repl-txt " sp. " ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual taxname } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " sp" ,
          repl-txt " sp." ,
          location end ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual nat-host } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "oxydase" ,
          repl-txt "oxidase" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "oxigenase" ,
          repl-txt "oxygenase" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  fix-format
    protein-name NULL ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome b" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome b gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "region" ,
                "cytb" ,
                "cyt b" ,
                "partial sequence" ,
                "complete sequence" ,
                "(cytb)" ,
                "(cyt b)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "maturase K" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "maturase K gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "partial" ,
                "complete" ,
                "region" ,
                "sequence" ,
                "matK" ,
                "mat k" ,
                "partial sequence" ,
                "complete sequence" ,
                "(matK)" ,
                "(mat K)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome c oxidase subunit I" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome c oxidase subunit I gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome c oxidase subunit II" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome c oxidase subunit II gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome oxidase subunit I" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome oxidase subunit I gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome oxidase subunit II" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome oxidase subunit II gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome c oxidase subunit 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome c oxidase subunit 1 gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome oxidase subunit 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome oxidase subunit 1 gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "complete sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome c oxidase subunit 2" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome c oxidase subunit 2 gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "partial" ,
                "complete" ,
                "sequence" ,
                "region" ,
                "partial sequence" ,
                "complete sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "cytochrome oxidase subunit 2" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "cytochrome oxidase subunit 2 gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "oxidase" ,
              synonyms {
                "oxydase" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "partial" ,
                "complete" ,
                "sequence" ,
                "region" ,
                "partial sequence" ,
                "complete sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "ribulose-1,5-bisphosphate carboxylase/oxygenase large subunit" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "ribulose-1,5-bisphosphate carboxylase/oxygenase large
 subunit gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "complete sequence" ,
                "region" ,
                "complete" ,
                "partial" ,
                "sequence" ,
                "rbcL" ,
                "partial sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "ribulose-1,5-bisphosphate carboxylase/oxygenase small subunit" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "ribulose-1,5-bisphosphate carboxylase/oxygenase small
 subunit gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "subunit" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "partial" ,
                "complete" ,
                "partial sequence" ,
                "region" ,
                "sequence" ,
                "rbcS" ,
                "complete sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "MHC class I antigen" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "MHC CLASS I ANTIGEN gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "MHC class II antigen" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "MHC CLASS II ANTIGEN gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "NADH dehydrogenase subunit 3" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "NADH dehydrogenase subunit 3 gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "ND3" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "NADH dehydrogenase subunit 3 gene" ,
            synonyms {
              "NADH dehydrogenase subunit 3 (ND3) gene" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "NADH dehydrogenase subunit 4" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "NADH dehydrogenase subunit 4 gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "ND4" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "NADH dehydrogenase subunit 4 gene" ,
            synonyms {
              "NADH dehydrogenase subunit 4 (ND4) gene" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "NADH dehydrogenase subunit 5" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "NADH dehydrogenase subunit 5 gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "ND5" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "NADH dehydrogenase subunit 5 gene" ,
            synonyms {
              "NADH dehydrogenase subunit 5 (ND5) gene" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "NADH dehydrogenase subunit 6" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "NADH dehydrogenase subunit 6 gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" ,
              "ND6" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "NADH dehydrogenase subunit 6 gene" ,
            synonyms {
              "NADH dehydrogenase subunit 6 (ND6) gene" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "actin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Actin gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "hypothetical protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Hypothetical protein gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Putative" ,
          repl-txt "putative" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "beta-tubulin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "beta-tubulin gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "beta-tubulin" ,
            synonyms {
              "beta tubulin" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "beta-actin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "beta-actin gene" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "gene" ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "gene" ,
            synonyms {
              "sequence" ,
              "partial sequence" ,
              "complete sequence" ,
              "partial" ,
              "complete" ,
              "gene sequence" } ,
            case-sensitive FALSE ,
            whole-word FALSE } ,
          {
            word "beta-actin" ,
            synonyms {
              "beta actin" ,
              "beta_actin" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  convert-feature {
    type-from gene ,
    type-to rRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      sequence {
        seqtype
          nucleotide NULL ,
        feature gene ,
        num-features
          equals 1 ,
        strandedness any } ,
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "16S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "partial sequence" ,
                "complete sequence" ,
                "complete" ,
                "partial" ,
                "gene" ,
                "sequence" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "r" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "16" ,
              synonyms {
                "5.8" ,
                "12" ,
                "18" ,
                "23" ,
                "26" ,
                "28" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word " ribosomal RNA gene" ,
              synonyms {
                "rDNA" ,
                "rRNA" ,
                "RNA" ,
                "RNA gene" ,
                "rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "12S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "12S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "12S ribosomal RNA gene" ,
              synonyms {
                "12SrDNA" ,
                "12SrRNA" ,
                "12SrDNA gene" ,
                "12SrRNA gene" ,
                "12SrDNA gene sequence" ,
                "12SrRNA gene sequence" ,
                "12SrDNA gene sequence region" ,
                "12SrRNA gene sequence region" ,
                "12S rDNA gene" ,
                "12S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "18S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "18S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "18S ribosomal RNA gene" ,
              synonyms {
                "18SrDNA" ,
                "18SrRNA" ,
                "18SrDNA gene" ,
                "18SrRNA gene" ,
                "18SrDNA gene sequence" ,
                "18SrRNA gene sequence" ,
                "18SrDNA gene sequence region" ,
                "18SrRNA gene sequence region" ,
                "18S rDNA gene" ,
                "18S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "5.8S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "5.8S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "5.8S ribosomal RNA gene" ,
              synonyms {
                "5.8SrDNA" ,
                "5.8SrRNA" ,
                "5.8SrDNA gene" ,
                "5.8SrRNA gene" ,
                "5.8SrDNA gene sequence" ,
                "5.8SrRNA gene sequence" ,
                "5.8SrDNA gene sequence region" ,
                "5.8SrRNA gene sequence region" ,
                "5.8S rDNA gene" ,
                "5.8S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "28S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "28S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "28S ribosomal RNA gene" ,
              synonyms {
                "28SrDNA" ,
                "28SrRNA" ,
                "28SrDNA gene" ,
                "28SrRNA gene" ,
                "28SrDNA gene sequence" ,
                "28SrRNA gene sequence" ,
                "28SrDNA gene sequence region" ,
                "28SrRNA gene sequence region" ,
                "28S rDNA gene" ,
                "28S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "26S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "26S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "26S ribosomal RNA gene" ,
              synonyms {
                "26SrDNA" ,
                "26SrRNA" ,
                "26SrDNA gene" ,
                "26SrRNA gene" ,
                "26SrDNA gene sequence" ,
                "26SrRNA gene sequence" ,
                "26SrDNA gene sequence region" ,
                "26SrRNA gene sequence region" ,
                "26S rDNA gene" ,
                "26S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "16S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "16S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "16S ribosomal RNA gene" ,
              synonyms {
                "16SrDNA" ,
                "16SrRNA" ,
                "16SrDNA gene" ,
                "16SrRNA gene" ,
                "16SrDNA gene sequence" ,
                "16SrRNA gene sequence" ,
                "16SrDNA gene sequence region" ,
                "16SrRNA gene sequence region" ,
                "16S rDNA gene" ,
                "16S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        value "23S ribosomal RNA" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "23S ribosomal RNA gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "ribosomal RNA gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "RNA" ,
              synonyms {
                "DNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal RNA gene" ,
              synonyms {
                "ribosomal DNA" ,
                "rDNA" ,
                "RDNA" ,
                "RDAN" ,
                "RNA" ,
                "DNA" ,
                "ribosomal" ,
                "RNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              synonyms {
                "sequence" ,
                "region" ,
                "gene sequence" ,
                "sequence region" ,
                "gene sequence region" ,
                "partial sequence" ,
                "partial gene sequence" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "23S ribosomal RNA gene" ,
              synonyms {
                "23SrDNA" ,
                "23SrRNA" ,
                "23SrDNA gene" ,
                "23SrRNA gene" ,
                "23SrDNA gene sequence" ,
                "23SrRNA gene sequence" ,
                "23SrDNA gene sequence region" ,
                "23SrRNA gene sequence region" ,
                "23S rDNA gene" ,
                "23S rRNA gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "S RIBOSOMAL RNA" ,
          repl-txt "S ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "S ribosomal RNA" ,
        match-location ends ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt " S RIBOSOMAL RNA" ,
          repl-txt "S ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Subunit Ribosomal RNA" ,
          repl-txt "subunit ribosomal RNA" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          rna-field {
            type
              rRNA NULL ,
            field product } } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "subunit ribosomal RNA" ,
        match-location ends ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      convert {
        fields
          rna-field {
            type
              miscRNA NULL ,
            field-from product ,
            field-to comment } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "18S ribosomal RNA gene, partial sequence; internal
 transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed
 spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "18S ribosomal RNA gene, partial sequence; internal
 transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed
 spacer 2, complete sequence; and 28S ribosomal RNA gene, partial sequence" ,
          repl-txt "contains 18S ribosomal RNA, internal transcribed spacer 1,
 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA" ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          rna-field {
            type
              miscRNA NULL ,
            field comment } } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      convert {
        fields
          feature-field {
            type otherRNA ,
            field-from
              legal-qual note ,
            field-to
              legal-qual product } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text append-semi } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type otherRNA ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "internal transcribed spacer 1, ITS1 sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "internal transcribed spacer 1," ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2," ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "region" ,
                "gene" ,
                "complete" ,
                "partial" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "gene sequence" ,
                "region" ,
                "partial sequence" ,
                "complete sequence" ,
                "partial gene sequence" ,
                "complete gene sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ITS1" ,
              synonyms {
                "ITS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  convert-feature {
    type-from rRNA ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Internal transcribed spacer 1, ITS1 sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ITS1" ,
              synonyms {
                "ITS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "region" ,
                "gene" ,
                "RNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Internal transcribed spacer 1, ITS1 sequence" ,
              synonyms {
                "ITS1" ,
                "ITS2" ,
                "internal transcribed spacer 1" ,
                "internal transcribed spacer 2" ,
                "internal transcribed spacer 1 (ITS)" ,
                "internal transcribed spacer 2 (ITS)" ,
                "internal transcribed spacer 1 (ITS1)" ,
                "internal transcribed spacer 2 (ITS2)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  convert-feature {
    type-from rRNA ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type rRNA ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "Internal transcribed spacer 1, ITS1 sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ITS1" ,
              synonyms {
                "ITS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "region" ,
                "gene" ,
                "RNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Internal transcribed spacer 1, ITS1 sequence" ,
              synonyms {
                "ITS1" ,
                "ITS2" ,
                "internal transcribed spacer 1" ,
                "internal transcribed spacer 2" ,
                "internal transcribed spacer 1 (ITS)" ,
                "internal transcribed spacer 2 (ITS)" ,
                "internal transcribed spacer 1 (ITS1)" ,
                "internal transcribed spacer 2 (ITS2)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  convert-feature {
    type-from region ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type region ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "Region: Internal transcribed spacer 1, ITS1 sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ITS1" ,
              synonyms {
                "ITS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "region" ,
                "gene" ,
                "RNA" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  convert-feature {
    type-from region ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type region ,
            field
              legal-qual name } ,
        string-constraint {
          match-text "Internal transcribed spacer 1, ITS1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Region" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              synonyms {
                " (ITS1)" ,
                " (ITS)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Internal transcribed spacer 1, ITS1" ,
              synonyms {
                "Internal transcribed spacer 1" ,
                "Internal transcribed spacer 2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              synonyms {
                "sequence" ,
                "gene" ,
                "partial" ,
                "complete" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  convert-feature {
    type-from misc-feature ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual note } ,
        string-constraint {
          match-text "Region: Internal transcribed spacer 1, ITS1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Region" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Region: Internal transcribed spacer 1, ITS1" ,
              synonyms {
                "Region: Internal transcribed spacer 1" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              synonyms {
                ", (ITS)" ,
                ", (ITS1)" ,
                " (ITS1)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  convert-feature {
    type-from misc-feature ,
    type-to otherRNA ,
    leave-original FALSE ,
    src-feat-constraint {
      field {
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Region: Internal transcribed spacer 1, ITS1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "Region" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Region: Internal transcribed spacer 1, ITS1" ,
              synonyms {
                "Region: Internal transcribed spacer 1" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              synonyms {
                ", (ITS)" ,
                ", (ITS1)" ,
                " (ITS1)" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        value "internal transcribed spacer 1" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "internal transcribed spacer 1, ITS1 sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word ", ITS1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal" ,
              synonyms {
                "interal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              synonyms {
                "sequence" ,
                "gene" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS1" ,
              synonyms {
                " (ITS)" ,
                " (ITS1)" ,
                ", (ITS1)" ,
                "ITS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 1" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "region" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        value "internal transcribed spacer 2" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "internal transcribed spacer 2, ITS2 sequence" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word ", ITS2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal" ,
              synonyms {
                "interal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              synonyms {
                "sequence" ,
                "gene" ,
                "region" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word ", ITS2" ,
              synonyms {
                " (ITS)" ,
                " (ITS2)" ,
                ", (ITS2)" ,
                "ITS" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "internal transcribed spacer 2" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              synonyms {
                "region" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "sequence" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule genomic ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna rRNA ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "5.8S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "5.8S" ,
              synonyms {
                "12S" ,
                "16S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            mol-class dna ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna genomic ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "5.8S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "5.8S" ,
              synonyms {
                "12S" ,
                "16S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "small subunit" ,
                "18S" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            strand unknown ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          dna NULL ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "5.8S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "5.8S" ,
              synonyms {
                "12S" ,
                "16S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      molinfo {
        field
          strand double ,
        is-not TRUE } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule genomic ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna rRNA ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "internal transcribed spacer 1" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            mol-class dna ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna genomic ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "internal transcribed spacer 1" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            strand unknown ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          dna NULL ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "internal transcribed spacer 1" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "1" ,
              synonyms {
                "2" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      molinfo {
        field
          strand double ,
        is-not TRUE } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule genomic ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna rRNA ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field comment } ,
        string-constraint {
          match-text "contains 18S ribosomal RNA, internal transcribed spacer
 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            mol-class dna ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          rna genomic ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field comment } ,
        string-constraint {
          match-text "contains 18S ribosomal RNA, internal transcribed spacer
 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            strand unknown ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      sequence {
        seqtype
          dna NULL ,
        feature any ,
        strandedness any } ,
      field {
        field
          rna-field {
            type
              miscRNA NULL ,
            field product } ,
        string-constraint {
          match-text "contains 18S ribosomal RNA, internal transcribed spacer
 1, 5.8S ribosomal RNA, internal transcribed spacer 2, and 28S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      molinfo {
        field
          strand double ,
        is-not TRUE } } } ,
  edit-location {
    type rRNA ,
    action
      set-both-partial {
        constraint all ,
        extend FALSE } ,
    retranslate-cds FALSE ,
    constraint {
      location {
        strand plus ,
        seq-type nuc ,
        partial5 complete ,
        partial3 complete ,
        location-type any ,
        end5
          dist-from-end 0 ,
        end3
          dist-from-end 0 } ,
      string {
        match-text "16S ribosomal RNA" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature rRNA ,
        num-features
          equals 1 ,
        length
          less-than 1201 ,
        strandedness any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location extrachrom } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "16S ribosomal RNA" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "16S" ,
              synonyms {
                "5.8S" ,
                "12S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual all-notes } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "16S ribosomal RNA" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "16S" ,
              synonyms {
                "5.8S" ,
                "12S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      string {
        match-text "extrachromosomal" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  apply-molinfo-block {
    to-list {
      molecule genomic ,
      mol-class dna } ,
    from-list {
      molecule macro-other } ,
    constraint {
      field {
        field
          rna-field {
            type
              rRNA NULL ,
            field product } ,
        string-constraint {
          match-text "16S ribosomal RNA" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          ignore-words {
            {
              word "16S" ,
              synonyms {
                "5.8S" ,
                "12S" ,
                "18S" ,
                "23S" ,
                "26S" ,
                "28S" ,
                "small subunit" ,
                "large subunit" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "ribosomal" ,
              synonyms {
                "small subunit ribosomal" ,
                "large subunit ribosomal" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "recombination activating gene" ,
          repl-txt "recombination activating protein" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "recombination-activating gene" ,
          repl-txt "recombination activating protein" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "recombination-activating protein" ,
          repl-txt "recombination activating protein" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "gag" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "GAG gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "pol" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "POL gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "vif" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "VIF gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "vpr" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "VPR gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "tat" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "TAT gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "rev" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "REV gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "vpu" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "VPU gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "env" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "ENV gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        value "nef" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type gene ,
            field
              legal-qual gene } ,
        string-constraint {
          match-text "NEF gene" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "gene" ,
              synonyms {
                "sequence" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "gene" ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "gag protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "gag" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "pol protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "pol" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "vif protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "vif" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "vpr protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "vpr" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "tat protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "tat" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "rev protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "rev" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "vpu protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "vpu" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "envelope glycoprotein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "env" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "env" ,
              synonyms {
                "envelope" } ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "nef protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "nef" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Human immunodeficiency virus-1" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "envelope protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Envelope protein" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Polyprotein" ,
          repl-txt "polyprotein" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          cds-gene-prot prot-name } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Polyprotein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "glycoprotein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Glycoprotein" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        value "capsid protein" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "Capsid Protein" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              synonyms {
                "sequence" ,
                "gene" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type cds ,
            field
              legal-qual codon-start } } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual codon-start } ,
        string-constraint {
          match-text "atg" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual nat-host ,
        value "Gallus gallus" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual nat-host ,
        constraint {
          match-text "Gallus domesticus (chicken)" ,
          match-location equals ,
          case-sensitive FALSE ,
          ignore-space TRUE ,
          ignore-punct TRUE ,
          ignore-words {
            {
              word "(chicken)" ,
              case-sensitive FALSE ,
              whole-word FALSE } ,
            {
              word "Gallus domesticus (chicken)" ,
              synonyms {
                "Gallus gallus domesticus" } ,
              case-sensitive FALSE ,
              whole-word FALSE } } ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location plastid } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location plastid } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Archaea" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location mitochondrion } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Bacteria" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location mitochondrion } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Archaea" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            location extrachrom } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Viruses" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      source {
        field1
          textqual dbxref ,
        constraint {
          match-text "taxon:" ,
          match-location starts ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } } ,
  aecr {
    action
      edit {
        edit {
          find-txt ":" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual collected-by } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt ":" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual identified-by } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "/" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual collected-by } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt "/" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual identified-by } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt ";" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual collected-by } ,
    also-change-mrna FALSE } ,
  aecr {
    action
      edit {
        edit {
          find-txt ";" ,
          repl-txt "," ,
          location anywhere ,
          case-insensitive FALSE } ,
        field
          source-qual
            textqual identified-by } ,
    also-change-mrna FALSE } ,
  fix-author {
    fix-type move-middle-to-first } ,
  aecr {
    action
      edit {
        edit {
          find-txt "Control region" ,
          repl-txt "control region" ,
          location anywhere ,
          case-insensitive TRUE } ,
        field
          feature-field {
            type misc-feature ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Control region" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      convert {
        fields
          feature-field {
            type repeat-region ,
            field-from
              legal-qual rpt-family ,
            field-to
              legal-qual satellite } ,
        strip-name FALSE ,
        keep-original FALSE ,
        capitalization none ,
        existing-text leave-old } ,
    also-change-mrna FALSE ,
    constraint {
      field {
        field
          feature-field {
            type repeat-region ,
            field
              legal-qual rpt-family } ,
        string-constraint {
          match-text "microsatellite" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  convert-feature {
    type-from gene ,
    type-to misc-feature ,
    leave-original FALSE ,
    src-feat-constraint {
      string {
        match-text "D-loop" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature gene ,
        num-features
          equals 1 ,
        strandedness any } } } ,
  convert-feature {
    type-from misc-feature ,
    type-to d-loop ,
    leave-original FALSE ,
    src-feat-constraint {
      string {
        match-text "D-loop" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature misc-feature ,
        num-features
          equals 1 ,
        strandedness any } } } ,
  aecr {
    action
      remove {
        field
          feature-field {
            type d-loop ,
            field
              legal-qual note } } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "D-loop" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          cds-gene-prot prot-name ,
        value "hemagglutinin" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      cdsgeneprot-qual {
        field1
          field prot-name ,
        constraint {
          match-text "haemagglutinin" ,
          match-location equals ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule cRNA ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Influenza A virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature any ,
        strandedness any } } } ,
  aecr {
    action
      apply {
        field
          molinfo-field
            molecule cRNA ,
        value "TRUE" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      source {
        field1
          textqual taxname ,
        constraint {
          match-text "Influenza B virus" ,
          match-location starts ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present FALSE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } ,
      sequence {
        seqtype
          nucleotide NULL ,
        feature any ,
        strandedness any } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual all-quals } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "PCR" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "PCR" ,
            synonyms {
              "microscope" ,
              "cloning" ,
              "clone" ,
              "sequencing" ,
              "direct sequencing" ,
              "taxonomy" ,
              "sequence" ,
              "PCR cloning" ,
              "sequence similarity" ,
              "blast" ,
              "blastn" ,
              "blastp" ,
              "blastx" ,
              "tblastn" ,
              "tblastx" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual identified-by } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "unknown" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "unknown" ,
            synonyms {
              "N/A" ,
              "none" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      remove {
        field
          source-qual
            textqual collected-by } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "unknown" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "unknown" ,
            synonyms {
              "N/A" ,
              "none" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } ,
  aecr {
    action
      apply {
        field
          source-qual
            textqual isolation-source ,
        value "nasopharyngeal aspirate" ,
        existing-text replace-old } ,
    also-change-mrna FALSE ,
    constraint {
      string {
        match-text "Naso pharyngeal aspirate" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space TRUE ,
        ignore-punct TRUE ,
        ignore-words {
          {
            word "Naso pharyngeal aspirate" ,
            synonyms {
              "Naso-pharyngeal aspirate" ,
              "naso pharyngeal aspirate" ,
              "naso-pharyngeal aspirate" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } } }
